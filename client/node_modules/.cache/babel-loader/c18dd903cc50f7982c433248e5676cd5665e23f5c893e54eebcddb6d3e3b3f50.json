{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Downloads\\\\Telegram Desktop\\\\cgp placement\\\\Internship\\\\notes\\\\Education_platform\\\\client\\\\src\\\\components\\\\dashboard\\\\PracticeSection.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './css/PracticeSection.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PracticeSection = ({\n  problems\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const getDifficultyStyle = difficulty => {\n    const colors = {\n      Easy: \"#00b894\",\n      Medium: \"#fdcb6e\",\n      Hard: \"#ff7675\"\n    };\n    return {\n      color: colors[difficulty],\n      borderColor: colors[difficulty]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"practice-section-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problems-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem-header-cell\",\n        children: \"QNo.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem-header-cell title\",\n        children: \"Coding Problems\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem-header-cell\",\n        children: \"Difficulty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"problems-list\",\n      children: problems.map(problem => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problem-row\",\n        onClick: () => navigate(`/problem/${problem.questionNo}`),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"problem-cell number\",\n          children: problem.questionNo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"problem-cell title\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem-title\",\n            children: problem.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem-topics\",\n            children: problem.topics.map((topic, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"topic-tag\",\n              children: topic\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"problem-cell\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"difficulty-badge\",\n            style: getDifficultyStyle(problem.difficultyLevel),\n            children: problem.difficultyLevel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, problem.questionNo, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(PracticeSection, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = PracticeSection;\nexport default PracticeSection;\nvar _c;\n$RefreshReg$(_c, \"PracticeSection\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","PracticeSection","problems","_s","navigate","getDifficultyStyle","difficulty","colors","Easy","Medium","Hard","color","borderColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","problem","onClick","questionNo","title","topics","topic","index","style","difficultyLevel","_c","$RefreshReg$"],"sources":["C:/Users/user/Downloads/Telegram Desktop/cgp placement/Internship/notes/Education_platform/client/src/components/dashboard/PracticeSection.jsx"],"sourcesContent":["import React from 'react';\r\nimport './css/PracticeSection.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst PracticeSection = ({ problems }) => {\r\n  const navigate = useNavigate();\r\n\r\n  const getDifficultyStyle = (difficulty) => {\r\n    const colors = {\r\n      Easy: \"#00b894\",\r\n      Medium: \"#fdcb6e\",\r\n      Hard: \"#ff7675\"\r\n    };\r\n    return {\r\n      color: colors[difficulty],\r\n      borderColor: colors[difficulty]\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"practice-section-container\">\r\n      <div className=\"problems-header\">\r\n        <div className=\"problem-header-cell\">QNo.</div>\r\n        <div className=\"problem-header-cell title\">Coding Problems</div>\r\n        <div className=\"problem-header-cell\">Difficulty</div>\r\n      </div>\r\n      <div className=\"problems-list\">\r\n        {problems.map((problem) => (\r\n          <div \r\n            key={problem.questionNo} \r\n            className=\"problem-row\"\r\n            onClick={() => navigate(`/problem/${problem.questionNo}`)}\r\n          >\r\n            <div className=\"problem-cell number\">{problem.questionNo}</div>\r\n            <div className=\"problem-cell title\">\r\n              <div className=\"problem-title\">{problem.title}</div>\r\n              <div className=\"problem-topics\">\r\n                {problem.topics.map((topic, index) => (\r\n                  <span key={index} className=\"topic-tag\">\r\n                    {topic}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n            </div>\r\n            <div className=\"problem-cell\">\r\n              <span \r\n                className=\"difficulty-badge\"\r\n                style={getDifficultyStyle(problem.difficultyLevel)}\r\n              >\r\n                {problem.difficultyLevel}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PracticeSection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}